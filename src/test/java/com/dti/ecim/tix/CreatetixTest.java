package com.dti.ecim.tix;
// Generated by CodiumAI

import com.dti.ecim.trx.entity.Tix;
import com.dti.ecim.trx.repository.TixRepository;
import com.dti.ecim.trx.service.impl.TixServiceImpl;

import jakarta.validation.ConstraintViolationException;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.*;

public class CreatetixTest {
    // Successfully saves a valid Tix object to the repository
    @Test
    public void test_successfully_saves_valid_tix() {
        TixRepository tixRepository = mock(TixRepository.class);
        TixServiceImpl tixService = new TixServiceImpl(tixRepository);
        Tix tix = new Tix();
        tix.setCode("VALID_CODE");
        when(tixRepository.save(any(Tix.class))).thenReturn(tix);
        Tix savedTix = tixService.createTix(tix);
        assertNotNull(savedTix);
        verify(tixRepository, times(1)).save(tix);
    }

    // Returns the saved Tix object with an assigned ID
    @Test
    public void test_returns_saved_tix_with_assigned_id() {
        TixRepository tixRepository = mock(TixRepository.class);
        TixServiceImpl tixService = new TixServiceImpl(tixRepository);
        Tix tix = new Tix();
        tix.setCode("VALID_CODE");
        tix.setId(1L);
        when(tixRepository.save(any(Tix.class))).thenReturn(tix);
        Tix savedTix = tixService.createTix(tix);
        assertNotNull(savedTix.getId());
        assertEquals(Long.valueOf(1L), savedTix.getId());
    }

    // Attempts to save a Tix object with a null code
    @Test
    public void test_attempts_to_save_tix_with_null_code() {
        TixRepository tixRepository = mock(TixRepository.class);
        TixServiceImpl tixService = new TixServiceImpl(tixRepository);
        Tix tix = new Tix();
        tix.setCode(null);
        assertThrows(ConstraintViolationException.class, () -> {
            tixService.createTix(tix);
        });
    }

    // Attempts to save a Tix object with an empty code
    @Test
    public void test_attempts_to_save_tix_with_empty_code() {
        TixRepository tixRepository = mock(TixRepository.class);
        TixServiceImpl tixService = new TixServiceImpl(tixRepository);
        Tix tix = new Tix();
        tix.setCode("");
        assertThrows(ConstraintViolationException.class, () -> {
            tixService.createTix(tix);
        });
    }

    // Attempts to save a Tix object with a null EventOffering
    @Test
    public void test_attempts_to_save_tix_with_null_event_offering() {
        TixRepository tixRepository = mock(TixRepository.class);
        TixServiceImpl tixService = new TixServiceImpl(tixRepository);
        Tix tix = new Tix();
        tix.setCode("VALID_CODE");
        tix.setEventOffering(null);
        assertThrows(ConstraintViolationException.class, () -> {
            tixService.createTix(tix);
        });
    }

}